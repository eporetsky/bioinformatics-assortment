shiny::runApp('Documents/1. Git/Git/mutRankModulated')
shiny::runApp('Documents/1. Git/Git/mutRankModulated')
shiny::runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
runApp('Documents/1. Git/Git/mutRank_0.7')
# For the purpose of testing, I'm using a small premade network, remove later
# Don't forget to add () to all data() variables, because it's a reactive objecgt
# igraph needs to work with as.matrix, fyi
data <- read.table("mr_adjacency_matrix.csv", header=T, sep="\t")
setwd("~/Documents/1. Git/Git/mutRank_0.7")
# For the purpose of testing, I'm using a small premade network, remove later
# Don't forget to add () to all data() variables, because it's a reactive objecgt
# igraph needs to work with as.matrix, fyi
data <- read.table("mr_adjacency_matrix.csv", header=T, sep="\t")
data
adj_matrix <- as.matrix(data[,-1])
adj_matrix
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#mr_exponential_decay(c(1,2,3,10,20,25))
# for testing
?combn
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?visIgraphLayout
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
combn(1:2,2,simplify=F)
runApp()
runApp()
1==1
1>=1
1>=0
1=>0
1<=0
runApp()
runApp('~/Documents/1. Git/mutRank-master')
runApp('~/Documents/1. Git/mutRank-master')
setwd("~/Documents/1. Git/Not Actually Git/RRM")
go_df <- read.csv("test.csv", header=T)
go_df$description <- factor(go_df$description, levels = go_df$description[order(go_df$DEG_item)])
go_df$type_new <- factor(go_df$type,levels=c("Upregulated","Downregulated"))
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
guide=guide_colorbar(frame.colour = "black",
ticks.colour = "black",
frame.linewidth = 1,
ticks = F,
label.position	="left",
bin=50
),
limits=c(1,9),
) +
ylab("Number of genes") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
#plot.background = element_rect(fill = "transparent",colour = NA), # make transparent
#legend.background = element_rect(fill = "transparent",colour = NA), # make transparent
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
#legend.box.background = element_rect(color = "black", fill = NA, size = 1),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
) #use a black-and0white theme with set font size
g
ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_wrap(factor(type,levels=c("up","down"))~.,nrow=2,scales="free") + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold_enrichment",
high = "red", guide="colourbar", limits=c(0,12)) +
ylab("Loading Strength") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #use a black-and0white theme with set font size
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
guide=guide_colorbar(frame.colour = "black",
ticks.colour = "black",
frame.linewidth = 1,
ticks = F,
label.position	="left",
bin=50
),
limits=c(1,9),
) +
ylab("Number of genes") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
#plot.background = element_rect(fill = "transparent",colour = NA), # make transparent
#legend.background = element_rect(fill = "transparent",colour = NA), # make transparent
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
#legend.box.background = element_rect(color = "black", fill = NA, size = 1),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
) #use a black-and0white theme with set font size
g
ggsave("11111new_GO_trans_bg.png",g, height = 5, width = 6, dpi=320,bg="white")
go_df
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
guide=guide_colorbar(frame.colour = "black",
ticks.colour = "black",
frame.linewidth = 1,
ticks = F,
label.position	="left",
bin=50
),
limits=c(1,12),
) +
ylab("Number of genes") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
#plot.background = element_rect(fill = "transparent",colour = NA), # make transparent
#legend.background = element_rect(fill = "transparent",colour = NA), # make transparent
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
#legend.box.background = element_rect(color = "black", fill = NA, size = 1),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
) #use a black-and0white theme with set font size
g
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
guide=guide_colorbar(frame.colour = "black",
ticks.colour = "black",
frame.linewidth = 1,
ticks = F,
label.position	="left",
bin=50
),
limits=c(0,12),
) +
ylab("Number of genes") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
#plot.background = element_rect(fill = "transparent",colour = NA), # make transparent
#legend.background = element_rect(fill = "transparent",colour = NA), # make transparent
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
#legend.box.background = element_rect(color = "black", fill = NA, size = 1),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
) #use a black-and0white theme with set font size
g
ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_wrap(factor(type,levels=c("up","down"))~.,nrow=2,scales="free") + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold_enrichment",
high = "red", guide="colourbar", limits=c(0,12)) +
ylab("Loading Strength") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #use a black-and0white theme with set font size
gtable_show_layout(gt)
gt = ggplot_gtable(ggplot_build(g))
gtable_show_layout(gt)
gt = ggplot_gtable(ggplot_build(g))
gtable_show_layout(gt)
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
guide=guide_colorbar(frame.colour = "black",
ticks.colour = "black",
frame.linewidth = 1,
ticks = F,
label.position	="left",
bin=50
),
limits=c(0,12),
) +
ylab("Number of genes") + #improve y-axis label
xlab("") + #improve x-axis label
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
#plot.background = element_rect(fill = "transparent",colour = NA), # make transparent
#legend.background = element_rect(fill = "transparent",colour = NA), # make transparent
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
#legend.box.background = element_rect(color = "black", fill = NA, size = 1),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "red"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
) #use a black-and0white theme with set font size
g
go_df <- read.csv("GO_terms.csv", header=T)
setwd("~/Documents/1. Git/bioinformatics-hodgepodge/plots/RRM")
go_df <- read.csv("GO_terms.csv", header=T)
go_df$description <- factor(go_df$description, levels = go_df$description[order(go_df$DEG_item)])
go_df <- read.csv("GO_terms.csv", header=T)
go_df$description <- factor(go_df$description, levels = go_df$description[order(go_df$DEG_item)])
go_df$type_new <- factor(go_df$type,levels=c("Upregulated","Downregulated"))
g<-ggplot(go_df, aes(description, DEG_item, fill=Fold_enrichment)) +
facet_grid(rows=vars(type_new),
scales = "free_y", space="free_y",drop=T) + #place the factors in separate facets
scale_y_continuous(expand=c(0,0)) +
geom_col() + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(name = "Fold\nEnrichment",
high = "red",
limits=c(0,12),
guide=guide_colorbar(frame.colour = "black", ticks.colour = "black", frame.linewidth = 1,
ticks = F, label.position	="left", bin=50)) +
ylab("Number of genes") +
xlab("") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
legend.title.align=0.5,
legend.justification = 'center',
legend.text=element_text(colour = "black", family = "Helvetica"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1),
axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle = -90),
strip.placement = "outside",
strip.text = element_text(size=9, lineheight=0.5,colour="black",family="Helvetica",face="bold"),
axis.text.y = element_text(colour = "black", family = "Helvetica"),
axis.text.x = element_text(colour = "black", family = "Helvetica")
)
ggsave("GO_terms.png",g, height = 5, width = 6, dpi=320,bg="white")
